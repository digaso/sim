cmake_minimum_required(VERSION 3.26)
project(sim)

set(CMAKE_CXX_STANDARD 20)


# Adding Raylib
include(FetchContent)
set(FETCHCONTENT_QUIET FALSE)
set(BUILD_EXAMPLES OFF CACHE BOOL "" FORCE) # don't build the supplied examples
set(BUILD_GAMES    OFF CACHE BOOL "" FORCE) # don't build the supplied example games

FetchContent_Declare(
        raylib
        GIT_REPOSITORY "https://github.com/raysan5/raylib.git"
        GIT_TAG "master"
        GIT_PROGRESS TRUE
)

FetchContent_MakeAvailable(raylib)

# Adding our source files
file(GLOB_RECURSE PROJECT_SOURCES CONFIGURE_DEPENDS "${CMAKE_CURRENT_LIST_DIR}/sources/*.c") # Define PROJECT_SOURCES as a list of all source files
set(PROJECT_INCLUDE "${CMAKE_CURRENT_LIST_DIR}/sources/") # Define PROJECT_INCLUDE to be the path to the include directory of the project


add_executable(sim main.cpp
        src/world.cpp
        src/regiment.hpp
        src/province.cpp
        src/population.cpp
        src/culture.cpp
        src/country.cpp
        src/character.cpp
        src/building.hpp
        src/building.cpp
        src/utils/date.cpp
        src/economy/market.cpp
        src/economy/good.cpp
        src/economy/market.hpp
        src/agents/ai_character.cpp
        src/agents/event_manager.cpp
        src/agents/events.cpp
        src/economy/market.hpp)
target_sources(${PROJECT_NAME} PRIVATE ${PROJECT_SOURCES})
target_include_directories(${PROJECT_NAME} PRIVATE ${PROJECT_INCLUDE})
target_link_libraries(${PROJECT_NAME} PRIVATE raylib)
